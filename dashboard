<head>
    <title>Dashboard</title>
    <link rel="icon" href="/favicon.svg">
    <link href="/fonts/mdi.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link type="text/css" rel="stylesheet" href="/css/materialize.min.css" media="screen,projection" />
    <link type="text/css" rel="stylesheet" href="/css/main.css" />
    <script type="text/javascript" src="/js/materialize.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var elems = document.querySelectorAll('.materialboxed');
            var instances = M.Materialbox.init(elems);
        });
    </script>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var elems = document.querySelectorAll('.sidenav');
            var instances = M.Sidenav.init(elems);
        });
    </script>
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var elems = document.querySelectorAll('.dropdown-trigger');
            var instances = M.Dropdown.init(elems, { closeOnClick: false, constrainWidth: false });
        });
    </script>
</head>
<nav class="blue-grey darken-2">
    <ul id="slide-out" class="sidenav">
        <li>
            <div class="user-view">
                <div class="background">
                    <img src="/img/navbg.webp">
                </div>
                <a href="#name">
                    <b>System Dashboard</b>
                </a>
                <a href="#description">
                    <span class="white-text name">A simple dashboard to quickly query your system status</span>
                </a>
            </div>
        </li>
        <li><a class="waves-effect waves-grey" onclick="ClassSwitch('html' , 'grey' , 'ColorMode');"><i
                    class="material-icons">brightness_medium</i>夜間模式|night mode</a></li>
        <li><a href="/" class="waves-effect waves-grey">主頁|Front-page</a></li>
    </ul>
    <a href="#" data-target="slide-out" class="sidenav-trigger show-on-large"><i
            class="material-icons">menu</i></a>
    <a internal href="/" class="brand-logo flow-text">Dashboard</a>
</nav>

<body>
    <div class="container s12 m12 l12">
        <div class="row">
            <div class="col s12 m6 left">
                <div class="card blue-grey darken-2-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">Memory</span>
                        <div class="progress">
                            <div class="determinate" id="mem" style="width: 0%"></div>
                        </div>
                        <div id="mempost"></div>
                    </div>
                </div>
            </div>
            <div class="col s12 m6 right">
                <div class="card blue-grey darken-2-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">CPU</span>
                        <div class="progress">
                            <div class="determinate" id="cpu" style="width: 0%"></div>
                        </div>
                        <div id="cpupost"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col s12 m12">
                <div class="card blue-grey darken-2-grey darken-1">
                    <div class="card-content white-text">
                        <span class="card-title">Quickshot</span>
                    </div>
                    <div class="card-action">
                        <a class="white-text" _blank href="/api/shutdown">Shutdown</a>
                        <a class="white-text" _blank href="/api/reboot">Reboot</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        var mem = new XMLHttpRequest();
        var cpu = new XMLHttpRequest();
        grab_mdata = function () {
            mem.open("GET", '/api/memstatus', true);
            mem.send();
        }
        grab_cdata = function () {
            cpu.open("GET", '/api/cpustatus', true);
            cpu.send();
        }
        grab_mdata();
        grab_cdata();
        mem.onreadystatechange = function () {
            if (this.readyState == 4) {
                if (this.status == 200) {
                    document.getElementById('mem').style.width = mem.responseText;
                    document.getElementById('mempost').innerHTML = "CPU Usage: " + mem.responseText;
                    setTimeout(grab_mdata, 1000);
                } else {
                    setTimeout(grab_mdata, 1000);
                }
            }
        };
        cpu.onreadystatechange = function () {
            if (this.readyState == 4) {
                if (this.status == 200) {
                    document.getElementById('cpu').style.width = cpu.responseText;
                    document.getElementById('cpupost').innerHTML = "CPU Usage: " + cpu.responseText;
                    setTimeout(grab_cdata, 1000);
                } else {
                    setTimeout(grab_cdata, 1000);
                }
            }
        };
    </script>
</body>